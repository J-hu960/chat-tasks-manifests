apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: chat-tasks-secret
                  key: JWT_SECRET
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chat-tasks-secret
                  key: OPENAI_API_KEY
            - name: DATABASE_URL
              value: mongodb://mongodb:27017/mydatabase
           
           
            - name: OPENAI_ORG_ID
              valueFrom:
                secretKeyRef:
                  name: chat-tasks-secret
                  key: OPENAI_ORG_ID
        - name: mongodb
          image: "mongo:latest"
          ports:
            - containerPort: 27017
              name: mongodb
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_DATABASE
              value: "mydatabase"
        
      volumes:
        - name: mongodb-data
          emptyDir: {}  
